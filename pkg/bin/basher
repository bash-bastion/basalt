#!/usr/bin/env bash
#!/usr/bin/env bash
# AUTOGENERATED by the 'util-Bash-generate-bins.sh' Glue action!
# Do NOT edit!

# https://github.com/bashup/realpaths
realpath.location() {
	realpath.follow "$1"
	realpath.absolute "$REPLY" ".."
}

realpath.dirname() {
	REPLY=.
	! [[ $1 =~ /+[^/]+/*$|^//$ ]] || REPLY="${1%${BASH_REMATCH[0]}}"
	REPLY=${REPLY:-/}
}

realpath.follow() {
	local target
	while [[ -L "$1" ]] && target=$(readlink -- "$1"); do
		realpath.dirname "$1"
		# Resolve relative to symlink's directory
		[[ $REPLY != . && $target != /* ]] && REPLY=$REPLY/$target || REPLY=$target
		# Break out if we found a symlink loop
		for target; do [[ $REPLY == "$target" ]] && break 2; done
		# Add to the loop-detect list and tail-recurse
		set -- "$REPLY" "$@"
	done
	REPLY="$1"
}

realpath.absolute() {
	REPLY=$PWD; local eg=extglob; ! shopt -q $eg || eg=; ${eg:+shopt -s $eg}
	while (($#)); do case $1 in
		//|//[^/]*) REPLY=//; set -- "${1:2}" "${@:2}" ;;
		/*) REPLY=/; set -- "${1##+(/)}" "${@:2}" ;;
		*/*) set -- "${1%%/*}" "${1##${1%%/*}+(/)}" "${@:2}" ;;
		''|.) shift ;;
		..) realpath.dirname "$REPLY"; shift ;;
		*) REPLY="${REPLY%/}/$1"; shift ;;
	esac; done; ${eg:+shopt -u $eg}
}


# Get the path to the 'lib' directory, which could be different depending on
# the method of installation. If the user installed the program through their
# distribution's package manager, the 'lib' files are in an extra subfolder
# compared to an installation through Git (ex. Basher)
realpath.location "${BASH_SOURCE[0]}"
REPLY="${REPLY/%\/}"
REPLY="${REPLY%/*}"
if [ -d "$REPLY/lib/basher" ]; then
	PROGRAM_LIB_DIR="$REPLY/lib/basher"
elif [ -d "$REPLY/lib" ]; then
	PROGRAM_LIB_DIR="$REPLY/lib"
else
	echo "Error: Could not determine \$PROGRAM_LIB_DIR"
	exit 1
fi

# shellcheck disable=SC1091
source "$PROGRAM_LIB_DIR/cmd/basher.sh"
