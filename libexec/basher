#!/usr/bin/env bash
#
# Summary: A package manager for shell scripts
#
# Usage: basher <command> [<args>]

z_resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

z_abs_dirname() {
  local cwd="$PWD"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}" || exit
    local name="${path##*/}"
    path="$(z_resolve_link "$name" || true)"
  done

  printf "%s" "$PWD"
  cd "$cwd" || exit
}

basher_main() {
  if [ -z "$BASHER_ROOT" ]; then
    BASHER_ROOT="$HOME/.basher"

    if [ -d "${XDG_DATA_HOME:-$HOME/.local/share}/basher" ]; then
      BASHER_ROOT="${XDG_DATA_HOME:-$HOME/.local/share}/basher"
    fi
  fi
  export BASHER_ROOT
  export BASHER_PREFIX="${BASHER_PREFIX:-"$BASHER_ROOT/cellar"}"
  export BASHER_PACKAGES_PATH="${BASHER_PACKAGES_PATH:-"$BASHER_PREFIX/packages"}"
  export BASHER_INSTALL_BIN="${BASHER_INSTALL_BIN:-"$BASHER_PREFIX/bin"}"
  export BASHER_INSTALL_MAN="${BASHER_INSTALL_MAN:-"$BASHER_PREFIX/man"}"

  export bin_path="$(z_abs_dirname "$0")"
  export PATH="$bin_path:$PATH"

  for f in "$bin_path"/subcommands/?*.sh; do
    source "$f"
  done

  local subcommand="$1"
  case "$subcommand" in
  '')
    echo "basher: no subcommand given"
    basher-help
    ;;
  *)
    if [ -f "$bin_path/subcommands/basher-$subcommand.sh" ]; then
      shift
      "basher-$subcommand" "$@"
    else
      echo "basher: no such subcommand '$subcommand'" >&2
      exit 1
    fi
    ;;
  esac
}

basher_main "$@"
